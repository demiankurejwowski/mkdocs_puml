name: Test, Linter

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master", "release", "develop" ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8"]  # , "3.8", "3.9", "3.10", "3.11"
    outputs:
      coverage: ${{ steps.test.outputs.coverage }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Export variable
        run: export PIPENV_DONT_USE_PYENV=1
      - name: Install Pipenv
        run: pip install pipenv
      - name: Cache pipenv
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: pipenv install --system --ignore-pipfile
      - name: Install dev dependencies
        run: pipenv install --system --ignore-pipfile --dev

      - name: Lint with flake8
        run: flake8 .
        continue-on-error: true

      - id: test
        name: Test with pytest
        run: |
          echo "coverage<<EOF" >> $GITHUB_OUTPUT
          echo "## ${{ matrix.python-version }}\n ```" >> $GITHUB_OUTPUT
          pytest --cov-report term --cov=mkdocs_puml -q tests/ >> $GITHUB_OUTPUT
          echo "```"
          echo "EOF" >> $GITHUB_OUTPUT

  comment:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - id: get_output
        run: |
           echo ${{needs.test.outputs.coverage}} >> $GITHUB_OUTPUT
      - uses: actions/github-script@v6
        with:
          script: |
            console.log(context)
#            github.rest.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: 'ðŸ‘‹ Thanks for reporting!\n' + context
#            })
